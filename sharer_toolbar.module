<?php

/**
 * @file sharer_toolbar.module
 * Hooks implementations and code logic related to Sharer Toolbar module
 */


/**
 * Implements hook_permission().
 */
function sharer_toolbar_permission() {
  return array(
    'access sharer toolbar' => array(
      'title' => t('Access sharer toolbar'),
      'description' => t('Choose who can acces sharers on front.'),
    ),
    'admin sharer toolbar' => array(
      'title' => t('Administer sharer toolbar'),
      'description' => t('Choose which social sharer to be displayed and other stuffs.'),
    ),
  );
}


/**
 * Implements hook_menu().
 */
function sharer_toolbar_menu() {
  return array(
    'admin/config/services/social-sharer-toolbar' => array(
      'title' => 'Sharer toolbar configuration',
      'description' => 'Configure sharer toolbar.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('sharer_toolbar_config_form'),
      'access arguments' => array('admin sharer toolbar'),
      'file' => 'sharer_toolbar.forms.inc',
    )
  );
}


/**
 * Implements hook_theme().
 */
function sharer_toolbar_theme($existing, $type, $theme, $path) {
  return array(

    // Sharer toolbar config form
    'sharer_toolbar_config_form' => array(
      'render element' => 'form',
      'file' => 'sharer_toolbar.theme.inc',
    ),

    // Sharer toolbar template
    'sharer_toolbar' => array(
      'variables' => array(
        'sharers' => array(),
      ),
      'template' => 'sharer-toolbar',
      // 'path' => 'templates',
    ),
  );
}


/**
 * Implements hook_sharer_toolbar_available_sharer().
 */
function sharer_toolbar_sharer_toolbar_available_sharer() {

  // Define default sharers
  return array(

    // Facebook sharer
    'facebook' => array(
      'sid' => 'facebook',
      'name' => 'Facebook',
      'icon_class' => 'icon-facebook',
      'url' => 'https://www.facebook.com/sharer/sharer.php?u=[:shared_url:]',
      'label' => 'Share on Facebook',
    ),

    // Twitter sharer
    'twitter' => array(
      'sid' => 'twitter',
      'name' => 'Twitter',
      'icon_class' => 'icon-twitter',
      'url' => 'https://twitter.com/home?status=[:shared_summary:] [:shared_url:]',
      'label' => 'Share on Twitter',
    ),

    // Google Plus sharer
    'googleplus' => array(
      'sid' => 'googleplus',
      'name' => 'Google +',
      'icon_class' => 'icon-googleplus',
      'url' => 'https://plus.google.com/share?url=[:shared_url:]',
      'label' => 'Share on Google +',
    ),

    // Twitter sharer
    'linkedin' => array(
      'sid' => 'linkedin',
      'name' => 'LinkedIn',
      'icon_class' => 'icon-linkedin',
      'url' => 'https://www.linkedin.com/shareArticle?mini=true&url=[:shared_url:]&title=[:shared_title:]&summary=[:shared_summary:]&source=[:shared_source:]',
      'label' => 'Share on LinkedIn',
    ),

    // Email sharer
    'email' => array(
      'sid' => 'email',
      'name' => 'Email',
      'icon_class' => 'icon-email',
      'url' => 'mailto:?subject=[:shared_title:]&body=[:shared_url:]',
      'label' => 'Share by email',
    ),
  );
}


/**
 * Implements hook_process_node().
 */
function sharer_toolbar_process_node(&$variables) {

  // Default value for sharer toolbar
  $variables['sharer_toolbar'] = NULL;

  // Generate only if user can access it
  if (user_access('access sharer toolbar')) {
    module_load_include('inc', 'sharer_toolbar');
    $sharing_buttons = array();

    // Get all active and available sharers
    $active_sharers = variable_get('sharer_toolbar_sharers_configuration', array());
    $available_sharers = _sharer_toolbar_get_available_sharers();

    // Generate button if sharer is active
    foreach ($active_sharers as $sid => &$sharer) {
      if ($sharer['status']) {

        // Merge file configuration to complete database configuration
        $sharer = array_merge($available_sharers[$sid], $sharer);

        // Transform URL
        _sharer_toolbar_generate_sharer_url($sharer['url'], $variables);
      }

      // or unset before sending array to template
      else {
        unset($active_sharers[$sid]);
      }
    }

    // Add javascript feature
    drupal_add_js(drupal_get_path('module', 'sharer_toolbar') . '/js/sharer-opener.js');

    // Render HTML for sharer toolbar
    if (!empty($active_sharers)) {
      $variables['sharer_toolbar'] = theme('sharer_toolbar', array(
        'title' => variable_get('sharer_toolbar_title', 'Share'),
        'sharers' => $active_sharers,
      ));
    }
  }
}
